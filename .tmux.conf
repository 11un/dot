# -------------------- general --------------------------------

# set prefix to C-s
set -g prefix C-s

# free-up C-b
unbind C-b

# delay between prefix & command
set -sg escape-time 1

# base indexes to 1
set -g base-index 1
setw -g pane-base-index 1

# vi
setw -g mode-keys vi

# shortcut to bind multiple pane broadcast
bind-key -n C-b setw synchronize-panes

set -g status-position bottom

# --------------------- panes --------------------------------

# vi-like split into panes
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

# display panes
bind-key q display-panes

# vi-like jump panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# switch to previous pane
bind-key a last-pane

# resize panes
bind -r h resize-pane -L 8
bind -r j resize-pane -D 8
bind -r k resize-pane -U 8
bind -r l resize-pane -R 8

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# -------------------- windows --------------------------------

# open new window
bind-key c new-window

# cycle windows
bind-key t next-window
bind-key T previous-window

# ------------------- copy & paste  ---------------------------

# copy + paste  (only visual line working atm)
bind-key [ copy-mode
bind-key ] paste-buffer

# FIXME: visual-mode not working
# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# ----------- shortcuts & helpers --------------------------------

# reload conf
bind-key R source-file ~/.tmux.conf \; display-message "so[urce] .tmux.conf"

# log stdout to text file
# bind P pipe-pane -o "cat >> ~/#W.log" \; display "toggled logging to ~/#W.log"

# ---------- aesthetics & appearance -------------------------------

# set status-utf8 on
# set utf8 on

# enable notifications / alerts
setw -g monitor-activity on
set -g visual-activity on

# color
set-option -g default-terminal screen-256color

# status line colors
set -g status-fg colour255
set -g status-bg colour234

# window list colors
setw -g window-status-bg colour234
setw -g window-status-fg colour242
setw -g window-status-last-fg colour242
setw -g window-status-last-bg colour234
# setw -g window-status-attr dim

# active window / window-list colors
setw -g window-status-current-fg colour255
setw -g window-status-current-bg colour234
# setw -g window-status-current-bg colour242
setw -g window-status-current-attr bright

# pane colors
set -g pane-active-border-fg colour0
set -g pane-border-bg default
set -g pane-border-fg colour0
set -g pane-active-border-bg  default

# TEST: try hiding window-list numbers
# setw -g window-status-current-format '#{pane_current_command}'
# setw -g window-status-format '#{pane_current_command}'

# inactive pane colors
# set -g window-style 'bg=colour233,fg=colour0'
# set -g window-active-style 'bg=colour16, fg=colour255'

# command / message line
set -g message-fg colour154
set -g message-bg colour232
set -g message-attr bright

# status line left
set -g status-left-length 33
set -g status-left "#[bg=colour234,fg=colour242] #S #I #P"

# status line right
set -g status-right "#[bg=colour234,fg=colour1,bold]#(acpi -b | cut -d ',' -f 2)#[bg=colour234,fg=colour242] %H:%M "

# TODO: maybe continue working on this
# set -g status-right "#[bg=colour242]#[fg=colour255]#(upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep state | grep -E 'charging|discharging')#(upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep percentage | grep -E '...%') #[fg=colour22]#[bg=colour154] %H:%M "

# center window list
set -g status-justify centre

# window title to title bar
# set-option -g set-titles on
# set-option -g set-titles-string "#I:#W"

# window status format
setw -g window-status-current-format "#W"
setw -g window-status-format "#I:#W"

# -------------- other & misc -------------------------------

bind-key : command-prompt
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# change layouts
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

set-window-option -g display-panes-time 1500

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0
