# initial config, remaps, shortcuts, etc.  ------------------------------------

## set prefix, free-up default
set -g prefix C-s; unbind C-b
## delay between prefix & command
set -sg escape-time 1

## base indexes to 1
# set -g base-index 1
# setw -g pane-base-index 1

## vi
set-window-option -g mode-keys vi

## put status bar on bottom
set -g status-position bottom

## enable notifications / alerts / persist 6 seconds
setw -g monitor-activity on
set -g visual-activity on
set -g display-time 6000

## open new window
bind-key c new-window

## windows, layouts
bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout
## change layouts
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

## command, history
bind-key : command-prompt
bind-key L clear-history

## reload this .conf file
bind-key R source-file ~/.tmux.conf \; display-message "so[urce] .tmux.conf"


# panes, pane, pane remaps, etc. -----------------------------------------------

# swap between last two panes
bind S swap-pane -s '!' -t $TMUX_PANE

## multi-pane broadcast
bind-key -n C-b setw synchronize-panes

## break current pane to new window, print info about it
bind-key ! break-pane -dP
## join if zero and pane 1
bind-key @ join-pane -s 0:1.0
## https://unix.stackexchange.com/questions/145857/how-do-you-hide-a-tmux-pane

## vi-like split into panes
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

## display panes
bind-key q display-panes

## vi-like jump panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

## switch to previous pane
bind-key a last-pane

## resize panes
bind -r h resize-pane -L 8
bind -r j resize-pane -D 8
bind -r k resize-pane -U 8
bind -r l resize-pane -R 8

## smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# FIXME: bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# copy, paste -----------------------------------------------------------------

# bind-key [ copy-mode
# bind-key ] paste-buffer

## vim, Vim, visual select, copy
## Use v to trigger selection
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
## Use y to yank current selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# colors -----------------------------------------------------------------------

set -g default-terminal screen-256color

## status line colors
set -g status-style fg=colour255,bg=colour234

## window list colors
setw -g window-status-style bg=colour234,fg=colour242
setw -g window-status-last-style bg=colour234,fg=colour242
setw -g window-status-current-style fg=colour255,bg=colour234,bright

## pane colors
set -g pane-active-border-style fg=colour0,bg=default
set -g pane-border-style fg=colour0,bg=default

## command / message line
set -g message-style fg=colour154,bg=colour232,bright

# status line left -------------------------------------------------------------
set -g status-left-length 33
set -g status-left '#[bg=colour233,fg=colour242] #S:#I:#P #[bg=colour234] '

# Battery status right.
set -g status-right '#[bg=colour233,fg=colour242] Â± #(cat /sys/class/power_supply/BAT0/capacity)%'

# center window list -----------------------------------------------
set -g status-justify centre
