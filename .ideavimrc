" map before use (vimscript line by line)
let mapleader = ','
let maplocalleader = ',,'

" SET ---------------------------------------------------------------  set, let

" hybrid numbers
set relativenumber

" search, case, highlight
set hlsearch
set incsearch
set ignorecase

" ideajoin  <J> (prefix notation <S-Tab> generally used with special non-alpha)
set ideajoin

" MAP ------------------------------------------------------- noremap, inoremap

" toggle number modes
nnoremap <Leader>n :set relativenumber!<CR>

" reverse exclusive linewise behavior when wrap is on.
noremap j gj
noremap k gk
noremap gj j
noremap gk k

" new lines above, below, above and below, cursor static
nnoremap <Leader>O O<Esc>j
nnoremap <Leader>o o<Esc>k
nnoremap <Leader>= o<Esc>kO<Esc>j

" move current line up, down
nnoremap <Leader>- dd<Esc>kkp<Esc>>
nnoremap <Leader>_ ddp

" uppercase word, insert, normal, cursor stays
inoremap <C-u> <Esc>viw~ea
nnoremap <C-u> viw~e

" list buffers, buffer, prep entry
nnoremap <Leader>bl :ls<CR>:b<Space>

" toggle hls constantly
nnoremap <Esc><Esc> :nohls<CR>

"trim whitespace
nnoremap <Leader>tw :%s/\s\+$//e<CR>:echo " -> trailing whitespace removed"<CR>

" jump to EOL in insert
inoremap <C-a> <Esc>$la

" .ideavimrc
nnoremap <silent> <Leader>ev :e ~/.ideavimrc<CR>

" source .ideavimrc
nnoremap <Leader>sv :source ~/.ideavimrc<CR>:echo " -> source ~./ideavimrc"<CR>

" ACTION ------------------------------------------------------ :map (IntelliJ)
:map <Leader>r :action Run<CR>
:map <Leader>v :action Valgrind<CR>
:map <Leader>d :action Debug<CR>

" PLUGIN ----------------------------------------------------------- (emulated)
set commentary
set surround
set easymotion
